{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MinhThanh\\\\Desktop\\\\NhapMon_React\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Square = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"square\" + (props.highlight ? \" highlight\" : \"\"),\n  onClick: () => props.onClick(),\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const winLine = this.props.winLine;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      highlight: winLine && winLine.includes(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  createTheBoard() {\n    let squares = [];\n\n    for (let i = 0; i < 9; ++i) {\n      let row = [];\n\n      for (let j = 0; j < 9; ++j) {\n        row.push(this.renderSquare(i * 9 + j));\n      }\n\n      squares.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this));\n    }\n\n    return squares;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.createTheBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(81).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isAscending: true,\n      boardSize: 9\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares, this.state.boardSize).winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        latestMoveSquare: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleSortToggle() {\n    this.setState({\n      isAscending: !this.state.isAscending\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNumber = this.state.stepNumber;\n    const current = history[stepNumber];\n    const checkResult = calculateWinner(current.squares, this.state.boardSize);\n    const moves = history.map((step, move) => {\n      const latestMoveSquare = step.latestMoveSquare;\n      const col = latestMoveSquare % 5 + 1;\n      const row = Math.floor(latestMoveSquare / 5) + 1;\n      const desc = move ? `Go to move #${move} (${col}, ${row})` : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: move === stepNumber ? \"move-list-item-selected\" : \"\",\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (checkResult.winner) {\n      status = \" The Winner: \" + winner;\n    } else {\n      if (checkResult.isDraw) {\n        status = \" The Game Draw\";\n      } else {\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n    }\n\n    const isAscending = this.state.isAscending;\n\n    if (!isAscending) {\n      moves.reverse();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winLine: checkResult.line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleSortToggle(),\n          children: isAscending ? \"Descending\" : \"Ascending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst calculateWinner = (squares, boardSize) => {\n  let lines = [];\n\n  for (let i = 0; i < boardSize; i++) {\n    for (let j = 0; j < boardSize; j++) {\n      if (boardSize - j >= 5) {\n        lines.push([boardSize * i + j, boardSize * i + j + 1, boardSize * i + j + 2, boardSize * i + j + 3, boardSize * i + j + 4]);\n        lines.push([i + boardSize * j, i + boardSize * (j + 1), i + boardSize * (j + 2), i + boardSize * (j + 3), i + boardSize * (j + 4)]);\n\n        if (boardSize - i >= 5) {\n          lines.push([i * boardSize + j, (i + 1) * boardSize + j + 1, (i + 2) * boardSize + j + 2, (i + 3) * boardSize + j + 3, (i + 4) * boardSize + j + 4]);\n          lines.push([i * boardSize + (4 + j), (i + 1) * boardSize + (3 + j), (i + 2) * boardSize + (2 + j), (i + 3) * boardSize + (1 + j), (i + 4) * boardSize + j]);\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c, d, e] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return {\n        winner: squares[a],\n        line: lines[i],\n        isDraw: false\n      };\n    }\n  }\n\n  let isDraw = true;\n\n  if (squares.includes(null)) {\n    isDraw = false;\n  }\n\n  return {\n    winner: null,\n    line: null,\n    isDraw: isDraw\n  };\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 226,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/MinhThanh/Desktop/NhapMon_React/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","highlight","onClick","value","Board","Component","renderSquare","i","winLine","squares","includes","createTheBoard","row","j","push","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","isAscending","boardSize","handleClick","slice","current","length","calculateWinner","winner","setState","concat","latestMoveSquare","jumpTo","step","handleSortToggle","checkResult","moves","map","move","col","Math","floor","desc","status","isDraw","reverse","line","lines","a","b","c","d","e","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nconst Square = (props) => (\r\n  <button\r\n    className={\"square\" + (props.highlight ? \" highlight\" : \"\")}\r\n    onClick={() => props.onClick()}\r\n  >\r\n    {props.value}\r\n  </button>\r\n);\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    const winLine = this.props.winLine;\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        highlight={winLine && winLine.includes(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  createTheBoard() {\r\n    let squares = [];\r\n    for (let i = 0; i < 9; ++i) {\r\n      let row = [];\r\n      for (let j = 0; j < 9; ++j) {\r\n        row.push(this.renderSquare(i * 9 + j));\r\n      }\r\n      squares.push(\r\n        <div key={i} className=\"board-row\">\r\n          {row}\r\n        </div>\r\n      );\r\n    }\r\n    return squares;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.createTheBoard()}</div>;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(81).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isAscending: true,\r\n      boardSize: 9,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares, this.state.boardSize).winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          latestMoveSquare: i,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  handleSortToggle() {\r\n    this.setState({\r\n      isAscending: !this.state.isAscending,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const stepNumber = this.state.stepNumber;\r\n    const current = history[stepNumber];\r\n    const checkResult = calculateWinner(current.squares, this.state.boardSize);\r\n    const moves = history.map((step, move) => {\r\n      const latestMoveSquare = step.latestMoveSquare;\r\n      const col = (latestMoveSquare % 5) + 1;\r\n      const row = Math.floor(latestMoveSquare / 5) + 1;\r\n      const desc = move\r\n        ? `Go to move #${move} (${col}, ${row})`\r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          {}\r\n          <button\r\n            className={move === stepNumber ? \"move-list-item-selected\" : \"\"}\r\n            onClick={() => this.jumpTo(move)}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (checkResult.winner) {\r\n      status = \" The Winner: \" + winner;\r\n    } else {\r\n      if (checkResult.isDraw) {\r\n        status = \" The Game Draw\";\r\n      } else {\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n      }\r\n    }\r\n\r\n    const isAscending = this.state.isAscending;\r\n    if (!isAscending) {\r\n      moves.reverse();\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winLine={checkResult.line}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <button onClick={() => this.handleSortToggle()}>\r\n            {isAscending ? \"Descending\" : \"Ascending\"}\r\n          </button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst calculateWinner = (squares, boardSize) => {\r\n  let lines = [];\r\n  for (let i = 0; i < boardSize; i++) {\r\n    for (let j = 0; j < boardSize; j++) {\r\n      if (boardSize - j >= 5) {\r\n        lines.push([\r\n          boardSize * i + j,\r\n          boardSize * i + j + 1,\r\n          boardSize * i + j + 2,\r\n          boardSize * i + j + 3,\r\n          boardSize * i + j + 4,\r\n        ]);\r\n        lines.push([\r\n          i + boardSize * j,\r\n          i + boardSize * (j + 1),\r\n          i + boardSize * (j + 2),\r\n          i + boardSize * (j + 3),\r\n          i + boardSize * (j + 4),\r\n        ]);\r\n        if (boardSize - i >= 5) {\r\n          lines.push([\r\n            i * boardSize + j,\r\n            (i + 1) * boardSize + j + 1,\r\n            (i + 2) * boardSize + j + 2,\r\n            (i + 3) * boardSize + j + 3,\r\n            (i + 4) * boardSize + j + 4,\r\n          ]);\r\n          lines.push([\r\n            i * boardSize + (4 + j),\r\n            (i + 1) * boardSize + (3 + j),\r\n            (i + 2) * boardSize + (2 + j),\r\n            (i + 3) * boardSize + (1 + j),\r\n            (i + 4) * boardSize + j,\r\n          ]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (\r\n      squares[a] &&\r\n      squares[a] === squares[b] &&\r\n      squares[a] === squares[c] &&\r\n      squares[a] === squares[d] &&\r\n      squares[a] === squares[e]\r\n    ) {\r\n      return {\r\n        winner: squares[a],\r\n        line: lines[i],\r\n        isDraw: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  let isDraw = true;\r\n  if (squares.includes(null)) {\r\n    isDraw = false;\r\n  }\r\n  return {\r\n    winner: null,\r\n    line: null,\r\n    isDraw: isDraw,\r\n  };\r\n};\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}